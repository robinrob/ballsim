#BlueJ class context
comment0.params=width\ height\ bgColor
comment0.target=Canvas(int,\ int,\ java.awt.Color)
comment0.text=\n\ Create\ a\ Canvas.\n\ @param\ width\ \ the\ desired\ width\ for\ the\ canvas\n\ @param\ height\ \ the\ desired\ height\ for\ the\ canvas\n\ @param\ bgClour\ \ the\ desired\ background\ color\ of\ the\ canvas\n
comment1.params=
comment1.target=Canvas.CanvasPane\ getCanvasPane()
comment10.params=xPos\ yPos\ width\ height
comment10.target=void\ eraseRectangle(int,\ int,\ int,\ int)
comment10.text=\n\ Erase\ the\ internal\ dimensions\ of\ the\ given\ rectangle.\ This\ is\ a\n\ convenience\ method.\ A\ similar\ effect\ can\ be\ achieved\ with\ the\ "erase"\n\ method.\n
comment11.params=shape
comment11.target=void\ erase(java.awt.Shape)
comment11.text=\n\ Erase\ a\ given\ shape's\ interior\ on\ the\ screen.\n\ \n\ @param\ shape\n\ \ \ \ \ \ \ \ \ \ \ \ the\ shape\ object\ to\ be\ erased\n
comment12.params=shape
comment12.target=void\ eraseOutline(java.awt.Shape)
comment12.text=\n\ Erases\ a\ given\ shape's\ outline\ on\ the\ screen.\n\ \n\ @param\ shape\n\ \ \ \ \ \ \ \ \ \ \ \ the\ shape\ object\ to\ be\ erased\n
comment13.params=image\ x\ y
comment13.target=boolean\ drawImage(java.awt.Image,\ int,\ int)
comment13.text=\n\ Draws\ an\ image\ onto\ the\ canvas.\n\ \n\ @param\ image\n\ \ \ \ \ \ \ \ \ \ \ \ the\ Image\ object\ to\ be\ displayed\n\ @param\ x\n\ \ \ \ \ \ \ \ \ \ \ \ x\ co-ordinate\ for\ Image\ placement\n\ @param\ y\n\ \ \ \ \ \ \ \ \ \ \ \ y\ co-ordinate\ for\ Image\ placement\n\ @return\ returns\ boolean\ value\ representing\ whether\ the\ image\ was\n\ \ \ \ \ \ \ \ \ completely\ loaded\n
comment14.params=text\ x\ y
comment14.target=void\ drawString(java.lang.String,\ int,\ int)
comment14.text=\n\ Draws\ a\ String\ on\ the\ Canvas.\n\ \n\ @param\ text\n\ \ \ \ \ \ \ \ \ \ \ \ the\ String\ to\ be\ displayed\n\ @param\ x\n\ \ \ \ \ \ \ \ \ \ \ \ x\ co-ordinate\ for\ text\ placement\n\ @param\ y\n\ \ \ \ \ \ \ \ \ \ \ \ y\ co-ordinate\ for\ text\ placement\n
comment15.params=text\ x\ y
comment15.target=void\ eraseString(java.lang.String,\ int,\ int)
comment15.text=\n\ Erases\ a\ String\ on\ the\ Canvas.\n\ \n\ @param\ text\n\ \ \ \ \ \ \ \ \ \ \ \ the\ String\ to\ be\ displayed\n\ @param\ x\n\ \ \ \ \ \ \ \ \ \ \ \ x\ co-ordinate\ for\ text\ placement\n\ @param\ y\n\ \ \ \ \ \ \ \ \ \ \ \ y\ co-ordinate\ for\ text\ placement\n
comment16.params=x1\ y1\ x2\ y2
comment16.target=void\ drawLine(int,\ int,\ int,\ int)
comment16.text=\n\ Draws\ a\ line\ on\ the\ Canvas.\n\ \n\ @param\ x1\n\ \ \ \ \ \ \ \ \ \ \ \ x\ co-ordinate\ of\ start\ of\ line\n\ @param\ y1\n\ \ \ \ \ \ \ \ \ \ \ \ y\ co-ordinate\ of\ start\ of\ line\n\ @param\ x2\n\ \ \ \ \ \ \ \ \ \ \ \ x\ co-ordinate\ of\ end\ of\ line\n\ @param\ y2\n\ \ \ \ \ \ \ \ \ \ \ \ y\ co-ordinate\ of\ end\ of\ line\n
comment17.params=newColor
comment17.target=void\ setForegroundColor(java.awt.Color)
comment17.text=\n\ Sets\ the\ foreground\ color\ of\ the\ Canvas.\n\ \n\ @param\ newColor\n\ \ \ \ \ \ \ \ \ \ \ \ the\ new\ color\ for\ the\ foreground\ of\ the\ Canvas\n
comment18.params=
comment18.target=java.awt.Color\ getForegroundColor()
comment18.text=\n\ Returns\ the\ current\ color\ of\ the\ foreground.\n\ \n\ @return\ the\ color\ of\ the\ foreground\ of\ the\ Canvas\n
comment19.params=newColor
comment19.target=void\ setBackgroundColor(java.awt.Color)
comment19.text=\n\ Sets\ the\ background\ color\ of\ the\ Canvas.\n\ \n\ @param\ newColor\n\ \ \ \ \ \ \ \ \ \ \ \ the\ new\ color\ for\ the\ background\ of\ the\ Canvas\n
comment2.params=
comment2.target=void\ repaint()
comment20.params=
comment20.target=java.awt.Color\ getBackgroundColor()
comment20.text=\n\ Returns\ the\ current\ color\ of\ the\ background\n\ \n\ @return\ the\ color\ of\ the\ background\ of\ the\ Canvas\n
comment21.params=newFont
comment21.target=void\ setFont(java.awt.Font)
comment21.text=\n\ changes\ the\ current\ Font\ used\ on\ the\ Canvas\n\ \n\ @param\ newFont\n\ \ \ \ \ \ \ \ \ \ \ \ new\ font\ to\ be\ used\ for\ String\ output\n
comment22.params=
comment22.target=java.awt.Font\ getFont()
comment22.text=\n\ Returns\ the\ current\ font\ of\ the\ canvas.\n\ \n\ @return\ the\ font\ currently\ in\ use\n
comment23.params=width\ height
comment23.target=void\ setSize(int,\ int)
comment23.text=\n\ Sets\ the\ size\ of\ the\ canvas.\n\ \n\ @param\ width\n\ \ \ \ \ \ \ \ \ \ \ \ new\ width\n\ @param\ height\n\ \ \ \ \ \ \ \ \ \ \ \ new\ height\n
comment24.params=
comment24.target=java.awt.Dimension\ getSize()
comment24.text=\n\ Returns\ the\ size\ of\ the\ canvas.\n\ \n\ @return\ The\ current\ dimension\ of\ the\ canvas\n
comment25.params=milliseconds
comment25.target=void\ wait(int)
comment25.text=\n\ Waits\ for\ a\ specified\ number\ of\ milliseconds\ before\ finishing.\ This\n\ provides\ an\ easy\ way\ to\ specify\ a\ small\ delay\ which\ can\ be\ used\ when\n\ producing\ animations.\n\ \n\ @param\ milliseconds\n\ \ \ \ \ \ \ \ \ \ \ \ the\ number\n
comment3.params=visible
comment3.target=void\ setVisible(boolean)
comment3.text=\n\ Set\ the\ canvas\ visibility\ and\ brings\ canvas\ to\ the\ front\ of\ screen\ when\n\ made\ visible.\ This\ method\ can\ also\ be\ used\ to\ bring\ an\ already\ visible\n\ canvas\ to\ the\ front\ of\ other\ windows.\n\ \n\ @param\ visible\n\ \ \ \ \ \ \ \ \ \ \ \ boolean\ value\ representing\ the\ desired\ visibility\ of\ the\n\ \ \ \ \ \ \ \ \ \ \ \ canvas\ (true\ or\ false)\n
comment4.params=shape
comment4.target=void\ draw(java.awt.Shape)
comment4.text=\n\ Draw\ the\ outline\ of\ a\ given\ shape\ onto\ the\ canvas.\n\ \n\ @param\ shape\n\ \ \ \ \ \ \ \ \ \ \ \ the\ shape\ object\ to\ be\ drawn\ on\ the\ canvas\n
comment5.params=shape
comment5.target=void\ fill(java.awt.Shape)
comment5.text=\n\ Fill\ the\ internal\ dimensions\ of\ a\ given\ shape\ with\ the\ current\ foreground\n\ color\ of\ the\ canvas.\n\ \n\ @param\ shape\n\ \ \ \ \ \ \ \ \ \ \ \ the\ shape\ object\ to\ be\ filled\n
comment6.params=xPos\ yPos\ diameter
comment6.target=void\ fillCircle(int,\ int,\ int)
comment6.text=\n\ Fill\ the\ internal\ dimensions\ of\ the\ given\ circle\ with\ the\ current\n\ foreground\ color\ of\ the\ canvas.\n
comment7.params=xPos\ yPos\ width\ height
comment7.target=void\ fillRectangle(int,\ int,\ int,\ int)
comment7.text=\n\ Fill\ the\ internal\ dimensions\ of\ the\ given\ rectangle\ with\ the\ current\n\ foreground\ color\ of\ the\ canvas.\ This\ is\ a\ convenience\ method.\ A\ similar\n\ effect\ can\ be\ achieved\ with\ the\ "fill"\ method.\n
comment8.params=
comment8.target=void\ erase()
comment8.text=\n\ Erase\ the\ whole\ canvas.\n
comment9.params=xPos\ yPos\ diameter
comment9.target=void\ eraseCircle(int,\ int,\ int)
comment9.text=\n\ Erase\ the\ internal\ dimensions\ of\ the\ given\ circle.\ This\ is\ a\ convenience\n\ method.\ A\ similar\ effect\ can\ be\ achieved\ with\ the\ "erase"\ method.\n
numComments=26
