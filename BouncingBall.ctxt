#BlueJ class context
comment0.params=xPos\ yPos\ xSpeed\ ySpeed\ diameter\ ballHysteresis\ gravity\ airRes\ surfaceRes\ canvas\ platformPos\ dataAnalyser
comment0.target=BouncingBall(double,\ double,\ double,\ double,\ int,\ double,\ double,\ double,\ double,\ Canvas,\ int[],\ DataAnalyser)
comment0.text=\n\ Constructor\ for\ BouncingBall\ object\n\ @param\ xPos\ initial\ horizontal\ position\ of\ the\ ball\n\ @param\ yPos\ initial\ vertical\ position\ of\ the\ ball\n\ @param\ xSpeed\ initial\ horizontal\ speed\ of\ the\ ball\n\ @param\ ySpeed\ initial\ vertical\ speed\ of\ the\ ball\n\ @param\ diameter\ diameter\ of\ the\ ball\n\ @param\ colour\ colour\ of\ the\ ball\n\ @param\ ballHysteresis\ amount\ of\ ball\ hysteresis\ on\ bouncing\n\ @param\ gravity\ strength\ of\ gravity\ in\ simulation\ environment\n\ @param\ airRes\ strength\ of\ air\ resistance\n\ @param\ surfaceRes\ strength\ of\ surface\ rolling\ friction\n\ @param\ canvas\ canvas\ to\ be\ drawn\ on\n\ @param\ platformPos\ array\ of\ platform\ heights\ as\ a\ function\ of\ x-position\n\ @param\ dataAnalyser\ DataAnalyser\ object\ to\ send\ data\ to\n
comment1.params=
comment1.target=Canvas\ getCanvas()
comment10.params=
comment10.target=boolean\ ballInYBounds()
comment10.text=\n\ Check\ the\ ball\ is\ within\ the\ canvas\ display's\ vertical\ boundaries\n\ @return\n
comment11.params=
comment11.target=void\ stopBall()
comment11.text=\n\ Stop\ the\ ball\ and\ tell\ the\ ball's\ DataAnalyser\ object\ it\ is\ stopped\n
comment2.params=colour
comment2.target=void\ draw(java.awt.Color)
comment2.text=\n\ Draw\ this\ ball\ at\ its\ current\ position\ onto\ the\ canvas\n
comment3.params=
comment3.target=void\ erase()
comment3.text=\n\ Erase\ this\ ball\ at\ its\ current\ position\n
comment4.params=delta_t
comment4.target=void\ move(double)
comment4.text=\n\ Move\ this\ ball\ according\ to\ its\ position,\ speed\ and\ external\ forces\ \n\ in\ time\ interval\ delta_t\ and\ redraw\n
comment5.params=delta_t
comment5.target=void\ moveHorizontal(double)
comment5.text=\n\ Moves\ the\ ball\ horizontally\ according\ to\ position,\ speed\ and\n\ external\ forces\ over\ the\ time\ interval\ delta_t\n\ @param\ delta_t\n
comment6.params=delta_t
comment6.target=void\ moveVertical(double)
comment6.text=\n\ Moves\ the\ ball\ vertically\ according\ to\ position,\ speed\ and\n\ external\ forces\ over\ the\ time\ interval\ delta_t\n\ @param\ delta_t\n
comment7.params=delta_t
comment7.target=void\ loopBack(double)
comment7.text=\n\ Brings\ the\ ball\ back\ round\ to\ the\ left-hand\ side\ of\ the\ canvas\n\ display\ if\ it\ goes\ off\ the\ right-hand\ side.\n\ @param\ delta_t\n
comment8.params=delta_t
comment8.target=void\ bounce(double)
comment8.text=\n\ Bounce\ the\ ball\ off\ the\ platform\n\ @param\ delta_t\n
comment9.params=
comment9.target=boolean\ ballInXBounds()
comment9.text=\n\ Check\ the\ ball\ is\ within\ the\ canvas\ display's\ horizontal\ boundaries\n\ @return\n
numComments=12
